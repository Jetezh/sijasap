// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  SUPERADMIN
  DOSEN
  MAHASISWA
}

model User {
  id_user Int @id @default(autoincrement())
  email_upnvj String? @unique(map: "email")
  username String
  password String
  nama_lengkap String?
  role Role
  fakultas_id Int?
  unit_universitas_id Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fakultas Fakultas? @relation(fields: [fakultas_id], references: [id_fakultas])
  unitUniversitas UnitUniversitas? @relation(fields: [unit_universitas_id], references: [id_unit_univesitas])

  peminjaman  Peminjaman[]

  @@map("user")
}

model Fakultas {
  id_fakultas Int @id @default(autoincrement())
  nama_fakultas String

  user User[]
  ruangan Ruangan[]
  kalenderAkademik KalenderAkademik[]
  hariLibur HariLibur[]

  @@map("Fakultas")
}

model UnitUniversitas {
  id_unit_univesitas Int @id @default(autoincrement())
  nama_unit String

  user User[]
  ruangan Ruangan[]
  kalenderAkademik KalenderAkademik[]
  hariLibur HariLibur[]

  @@map("UnitUniversitas")
}

model Ruangan {
  id_ruangan Int @id @default(autoincrement())
  nama_ruangan String
  gedung String
  lantai Int
  kapasitas Int
  tipe_ruangan String
  fakultas_id Int?
  unit_universitas_id Int?
  imgUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fakultas Fakultas? @relation(fields: [fakultas_id], references: [id_fakultas])
  unitUniversitas UnitUniversitas? @relation(fields: [unit_universitas_id], references: [id_unit_univesitas])

  peminjaman Peminjaman[]
  jadwalKuliah JadwalKuliah[]
  ruanganFasilitas RuanganFasilitas[]

  @@map("Ruangan")
}

model Fasilitas {
  id_fasilitas Int @id @default(autoincrement())
  nama_fasilitas String

  ruanganFasilitas RuanganFasilitas[]

  @@map("Fasilitas")
}

model RuanganFasilitas {
  id_ruangan Int
  id_fasilitas Int

  ruangan Ruangan @relation(fields: [id_ruangan], references: [id_ruangan])
  fasilitas Fasilitas @relation(fields: [id_fasilitas], references: [id_fasilitas])

  @@id([id_ruangan, id_fasilitas])
  @@map("RuanganFasilitas")
}

model Peminjaman  {
  id_peminjaman Int @id @default(autoincrement())
  id_user Int
  id_ruangan  Int
  waktu_mulai DateTime
  waktu_selesai DateTime
  tujuan String
  jumlah_peserta  Int
  status_peminjaman_id  Int
  alasan_ditolak_id Int

  user User @relation(fields: [id_user], references: [id_user])
  ruangan Ruangan @relation(fields: [id_ruangan], references: [id_ruangan])
  statusPeminjaman  StatusPeminjaman  @relation(fields: [status_peminjaman_id], references: [id_status_peminjaman])
  alasanDitolak AlasanPenolakan @relation(fields: [alasan_ditolak_id], references: [id_alasan_penolakan])

  @@map("Peminjaman")
}

model StatusPeminjaman {
  id_status_peminjaman Int @id @default(autoincrement())
  nama_status String @unique

  peminjaman Peminjaman[]

  @@map("StatusPeminjaman")
}

model AlasanPenolakan {
  id_alasan_penolakan Int @id @default(autoincrement())
  deskripsi_alasan String

  peminjaman Peminjaman[]

  @@map("AlasanPenolakan")
}

model JadwalKuliah {
  id_jadwal Int @id @default(autoincrement())
  id_ruangan Int
  hari String
  jam String
  semester Int

  ruangan Ruangan @relation(fields: [id_ruangan], references: [id_ruangan])

  @@map("JadwalKuliah")
}

model KalenderAkademik {
  id_event Int @id @default(autoincrement())
  nama_event String
  tanggal_mulai DateTime
  tanggal_selesai DateTime
  fakultas_id Int?
  unit_universitas_id Int?

  fakultas Fakultas? @relation(fields: [fakultas_id], references: [id_fakultas])
  unitUniversitas UnitUniversitas? @relation(fields: [unit_universitas_id], references: [id_unit_univesitas])

  @@map("KalenderAkademik")
}

model HariLibur {
  id_hari_libur Int @id @default(autoincrement())
  tanggal_libur DateTime
  jenis_libur String
  fakultas_id Int?
  unit_universitas_id Int?

  fakultas Fakultas? @relation(fields: [fakultas_id], references: [id_fakultas])
  unitUniversitas UnitUniversitas? @relation(fields: [unit_universitas_id], references: [id_unit_univesitas])

  @@map("HariLibur")
}